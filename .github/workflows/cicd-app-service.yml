name: cicd-app-service

on:
  #push:
  #  branches:
  #    - main
  #  paths:
  #    - 'todo/**'  
  workflow_dispatch:
    inputs:
    
jobs:  
  build_app:
    runs-on: ubuntu-latest
    environment: APP-SERVICE
    defaults:
      run:
        working-directory: ./todo
    outputs:
      RELEASE_VERSION: ${{ steps.version.outputs.RELEASE_VERSION }}
      RELEASE_NAME: ${{ steps.version.outputs.RELEASE_NAME }}
      RELEASE_FILE_NAME: ${{ steps.version.outputs.RELEASE_FILE_NAME }}
      
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
      
      - name: Build the .jar
        run: |
          ./mvnw clean package -DskipTests
      
      # Review: Implement some more mature mono repo versioning 
      - name: Figure out the version info
        id: version
        run: |
          cd ./target
          files=(todo*.jar)
          mv "$files" "./todo-${GITHUB_SHA}.jar"
          ls -la
          cd ..
          echo "::set-output name=RELEASE_VERSION::${GITHUB_SHA}"
          echo "::set-output name=RELEASE_NAME::todo-${GITHUB_SHA}"
          echo "::set-output name=RELEASE_FILE_NAME::todo-${GITHUB_SHA}.jar"
          
      - name: Display next version
        run: |
          echo "Version: ${{ steps.version.outputs.RELEASE_VERSION }}"
          echo "Release name: ${{ steps.version.outputs.RELEASE_NAME }}"
          echo "Release file name: ${{ steps.version.outputs.RELEASE_FILE_NAME }}"
      
      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.version.outputs.RELEASE_NAME }}
          path: ./todo/target/${{ steps.version.outputs.RELEASE_FILE_NAME }}
          if-no-files-found: error
          retention-days: 1
  
  deploy_app:
    needs: [build_app]
    runs-on: ubuntu-latest
    environment: APP-SERVICE
    steps:
      - name: Download build artefacts
        uses: actions/download-artifact@v2
        with:
          name: ${{needs.build_app.outputs.RELEASE_NAME}}
      - name: Check downloaded files
        run: |
          pwd
          ls -la
          ls -la ./${{ needs.build_app.outputs.RELEASE_FILE_NAME }}
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set default Azure subscription
        run: az account set -s ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Deploy to AppService
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{secrets.AZURE_APP_NAME}}
          package: ./${{needs.build_app.outputs.RELEASE_FILE_NAME}}
      
      - name: Run integration test(s)
        run: |
          echo "Run integration tests...."
  
